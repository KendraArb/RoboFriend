{"version":3,"sources":["constants.js","reducers.js","reportWebVitals.js","actions.js","api/api.js","components/Scroll.js","components/Card.js","components/CardList.js","components/SearchBox.js","components/ErrorBoundary.js","containers/App.js","index.js"],"names":["CHANGE_SEARCH_FIELD","REQUEST_ROBOTS_PENDING","REQUEST_ROBOTS_SUCCESS","REQUEST_ROBOTS_FAILED","initialState","search","searchField","robots","isPending","error","reducers","searchRobots","state","action","type","payload","requestRobots","rootReducers","combineReducers","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","dispatch","link","fetch","response","json","data","catch","Scroll","props","style","overflowY","height","className","children","Card","name","email","id","src","alt","CardList","map","robot","SearchBox","placeholder","onChange","ErrorBoundary","hasError","info","this","setState","Component","App","onRequestRobots","onSearchChange","filteredRobots","filter","toLowerCase","includes","connect","event","text","target","value","logger","createLogger","store","createStore","applyMiddleware","thunk","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.46c90a17.chunk.js","sourcesContent":["export const CHANGE_SEARCH_FIELD = 'CHANGE_SEARCH_FIELD';\r\nexport const REQUEST_ROBOTS_PENDING = 'REQUEST_ROBOTS_PENDING';\r\nexport const REQUEST_ROBOTS_SUCCESS = 'REQUEST_ROBOTS_SUCCESS';\r\nexport const REQUEST_ROBOTS_FAILED = 'REQUEST_ROBOTS_FAILED';\r\n","import { combineReducers } from 'redux';\r\nimport { CHANGE_SEARCH_FIELD, REQUEST_ROBOTS_PENDING, REQUEST_ROBOTS_SUCCESS, REQUEST_ROBOTS_FAILED } from './constants';\r\n\r\nconst initialState = {\r\n\tsearch: { searchField: '' },\r\n\trobots: { robots: [], isPending: true, error: '' },\r\n};\r\n\r\nconst reducers = {\r\n\tsearchRobots: (state = initialState.search, action = {}) => {\r\n\t\tswitch (action.type) {\r\n\t\t\tcase CHANGE_SEARCH_FIELD:\r\n\t\t\t\treturn { ...state, searchField: action.payload };\r\n\t\t\tdefault:\r\n\t\t\t\treturn state;\r\n\t\t}\r\n\t},\r\n\trequestRobots: (state = initialState.robots, action = {}) => {\r\n\t\tswitch (action.type) {\r\n\t\t\tcase REQUEST_ROBOTS_PENDING:\r\n\t\t\t\treturn { ...state, isPending: true };\r\n\t\t\tcase REQUEST_ROBOTS_SUCCESS:\r\n\t\t\t\treturn { ...state, robots: action.payload, isPending: false };\r\n\t\t\tcase REQUEST_ROBOTS_FAILED:\r\n\t\t\t\treturn { ...state, error: action.payload, isPending: false };\r\n\t\t\tdefault:\r\n\t\t\t\treturn state;\r\n\t\t}\r\n\t},\r\n};\r\n\r\nexport const rootReducers = combineReducers(reducers);\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { apiCall } from './api/api';\r\nimport { CHANGE_SEARCH_FIELD, REQUEST_ROBOTS_PENDING, REQUEST_ROBOTS_SUCCESS, REQUEST_ROBOTS_FAILED } from './constants';\r\n\r\nexport const setSearchfield = text => {\r\n\treturn { type: CHANGE_SEARCH_FIELD, payload: text };\r\n};\r\n\r\nexport const requestRobots = () => dispatch => {\r\n\tdispatch({ type: REQUEST_ROBOTS_PENDING });\r\n\tapiCall('https://jsonplaceholder.typicode.com/users')\r\n\t\t.then(data => dispatch({ type: REQUEST_ROBOTS_SUCCESS, payload: data }))\r\n\t\t.catch(error => dispatch({ type: REQUEST_ROBOTS_FAILED, payload: error }));\r\n};\r\n","export const apiCall = link => fetch(link).then(response => response.json());\r\n","import React from 'react';\r\nimport '../assets/css/Scroll.css';\r\n\r\nconst Scroll = props => {\r\n\treturn (\r\n\t\t<div style={{ overflowY: 'scroll', height: '80vh' }} className=\"scroll\">\r\n\t\t\t{props.children}\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default Scroll;\r\n","import React from 'react';\r\n\r\nconst Card = ({ name, email, id }) => {\r\n\treturn (\r\n\t\t<div className=\"tc bg-light-green dib br3 pa3 ma2 grow bw2 shadow-5\">\r\n\t\t\t<img src={`https://robohash.org/${id}?200x200`} alt=\"avatar\" />\r\n\t\t\t<div>\r\n\t\t\t\t<h2>{name}</h2>\r\n\t\t\t\t<p>{email}</p>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default Card;\r\n","import React from 'react';\r\nimport Card from './Card';\r\n\r\nconst CardList = ({ robots }) => {\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t{robots.map(robot => {\r\n\t\t\t\treturn <Card key={robot.id} id={robot.id} name={robot.name} email={robot.email} />;\r\n\t\t\t})}\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default CardList;\r\n","import React from 'react';\r\n\r\nconst SearchBox = ({ search }) => {\r\n\treturn (\r\n\t\t<div className=\"pa2\">\r\n\t\t\t<input className=\"pa3 ba b--green bg-lightest-blue\" type=\"search\" placeholder=\"Search Robots\" onChange={search} />\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default SearchBox;\r\n","import React, { Component } from 'react';\r\n\r\nclass ErrorBoundary extends Component {\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\t\tthis.state = { hasError: false };\r\n\t}\r\n\r\n\tcomponentDidCatch(error, info) {\r\n\t\tthis.setState({ hasError: true });\r\n\t}\r\n\r\n\trender() {\r\n\t\treturn this.state.hasError ? <h1>Oops. That is not good.</h1> : this.props.children;\r\n\t}\r\n}\r\n\r\nexport default ErrorBoundary;\r\n","import { connect } from 'react-redux';\nimport React, { Component } from 'react';\nimport { setSearchfield, requestRobots } from '../actions';\n\nimport Scroll from '../components/Scroll';\nimport CardList from '../components/CardList';\nimport SearchBox from '../components/SearchBox';\nimport ErrorBoundary from '../components/ErrorBoundary';\n\nimport '../assets/css/App.css';\n\nconst mapStateToProps = state => {\n\treturn {\n\t\tsearchField: state.searchRobots.searchField,\n\t\trobots: state.requestRobots.robots,\n\t\tisPending: state.requestRobots.isPending,\n\t};\n};\n\nconst mapDispatchToProps = dispatch => {\n\treturn {\n\t\tonSearchChange: event => dispatch(setSearchfield(event.target.value)),\n\t\tonRequestRobots: () => dispatch(requestRobots()),\n\t};\n};\n\nclass App extends Component {\n\tcomponentDidMount() {\n\t\tthis.props.onRequestRobots();\n\t}\n\trender() {\n\t\tconst { robots, searchField, onSearchChange, isPending } = this.props;\n\t\tconst filteredRobots = robots.filter(robot => {\n\t\t\treturn robot.name.toLowerCase().includes(searchField);\n\t\t});\n\t\treturn (\n\t\t\t<div className=\"tc\">\n\t\t\t\t<h1 className=\"f1\">RoboFriends</h1>\n\t\t\t\t<SearchBox search={onSearchChange} />\n\t\t\t\t<Scroll>\n\t\t\t\t\t{isPending ? (\n\t\t\t\t\t\t<h1>Loading</h1>\n\t\t\t\t\t) : (\n\t\t\t\t\t\t<ErrorBoundary>\n\t\t\t\t\t\t\t<CardList robots={filteredRobots} />;\n\t\t\t\t\t\t</ErrorBoundary>\n\t\t\t\t\t)}\n\t\t\t\t</Scroll>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n","import React from 'react';\nimport thunk from 'redux-thunk';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { rootReducers } from './reducers';\nimport { createLogger } from 'redux-logger';\nimport reportWebVitals from './reportWebVitals';\nimport { createStore, applyMiddleware } from 'redux';\n\nimport 'tachyons';\nimport './assets/css/index.css';\n\nimport App from './containers/App';\n\nconst logger = createLogger();\nconst store = createStore(rootReducers, applyMiddleware(thunk, logger));\n\nReactDOM.render(\n\t<React.StrictMode>\n\t\t<Provider store={store}>\n\t\t\t<App />\n\t\t</Provider>\n\t</React.StrictMode>,\n\tdocument.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}